#include <stdio.h>
 #define INF 999
 #define MAX 10
 struct node{
    int cost[MAX];
    int nextHop[MAX];
 }rt[MAX];
 int main(){
    int n,i,j,k;
    int dist[MAX][MAX];
    printf("Enter the no of routers:");
    scanf("%d",&n);
    printf("Enter the cost matrix use %d for no direct path\n",INF);
    for(i = 0; i< n;i++){
        for(j=0; j < n;j++){
            scanf("%d",&dist[i][j]);
        }
    }
    for(i = 0; i< n;i++){
        for(j = 0; j < n; j++){
            rt[i].cost[j] = dist[i][j];
            rt[i].nextHop[j] = (dist[i][j] != INF && i != j)?j:-1;
        }
    }
    int updated = 1;
    do{
        updated = 0;
        for(i = 0; i< n;i++){
            for(j = 0; j < n;j++){
                for(k = 0; k < n; k++){
                }
            }
        }
    }while(updated);
                    if(rt[i].cost[j] > dist[i][k] + rt[k].cost[j]){
                        rt[i].cost[j] = dist[i][k] + rt[k].cost[j];
                        rt[i].nextHop[j] = k;
                        updated = 1;
                    }
    for(i = 0; i< n;i++){
        printf("Routing table for %c\n",'A'+i);
        printf("TO\tcost\tnext\n");
        for(j = 0; j< n;j++){
            printf("%c\t%d\t",'A'+j,rt[i].cost[j]);
            if(rt[i].nextHop[j] != -1){
                printf("%c\n",'A'+rt[i].nextHop[j]);
            }else{
    }
        }
            }
                printf("-\n");
    char src , dest;
    printf("Enter the source (A-%c):",'A'+n-1);
    scanf(" %c",&src);    
    printf("Enter the Destination (A-%c):",'A'+n-1);
    scanf(" %c",&dest);
    int s = src - 'A';
    int d = dest - 'A';
    if(rt[s].cost[d] == INF){
        printf("No direct path exist between %c to %c\n",src,dest);
    }else{
        printf("The shortest path between %c to %c with cost %d:%c",src,dest,rt[s].cost[d],src);
        while(s != d){
            s = rt[s].nextHop[d];
            printf("->%c",'A'+s);
        }printf("\n");
    }
    return 0;
 }
